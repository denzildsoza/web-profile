.skills-page-grid & div {
  width: fit-content;
  height: fit-content;
}

.skills-page-grid {
  display: grid;
  grid-template-areas:
    "frontend frontend frontend midleend"
    "backend backend hostingend  dataStorage"
    "processes processes processes  processes";
  /* grid-template-rows: auto; */
  gap: 32px;
  backdrop-filter: blur(50px);
  background-color: transparent;
}

#frontEnd {
  display: grid;
  grid-area: frontend;
  grid-template-areas: "markUp programming styling styling";
  grid-template-columns: 3fr 6fr 2fr;
  gap: 8px;
}

#programming {
  grid-area: programming;
  display: grid;
  grid-template-areas:
    "javascript webPack"
    "javascript react"
    "reactRedux react"
    "reactRedux react";
  grid-column: 1fr;
  grid-row: 1fr;
  gap: 4px;
}

#styling {
  grid-area: styling;
  display: grid;
  grid-template-areas:
    "taiWind"
    "sass"
    "css";
  gap: 4px;
}

#taiWind {
  grid-area: taiWind;
}

#sass {
  grid-area: sass;
}

#css {
  grid-area: css;
  background-color: #ffffff;
}

#markUp {
  display: grid;
  grid-area: markUp;
  grid-template-areas:
    "html"
    "petiteVue";
  gap: 4px;
}

#html {
  grid-area: html;
}

#petite-vue {
  grid-area: petiteVue;
  background: -webkit-linear-gradient(315deg, #42d392 25%, #647eff);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

#webPack {
  background-color: #f6f8fa;
}

#javascript {
  grid-area: javascript;
  background-image: url("../assets/images/computer-program-coding-screen.jpg");
}

#react-redux {
  grid-area: reactRedux;
}

#webPack {
  grid-area: webPack;
}

#react {
  grid-area: react;
}

#midleEnd {
  grid-area: midleend;
  display: grid;
  grid-template-areas:
    "rest jwt"
    "websockets webRc"
    "graphQl graphQl";
  grid-template-columns: 1fr 1fr;
  gap: 4px;
}

#rest {
  grid-area: rest;
}

#graphQl {
  grid-area: graphQl;
}

#websockets {
  grid-area: websockets;
}

#webRc {
  grid-area: webRc;
}

#j-w-t {
  grid-area: jwt;
}

#backEnd {
  grid-area: backend;
  display: grid;
  grid-template-areas: "javascriptBackend python lowLevel";
  grid-template-columns: repeat(1fr, 3);
  gap: 8px;
}

#javascript-backend {
  grid-area: javascriptBackend;
  display: grid;
  grid-template-areas:
    "node"
    "express";
  /* grid-template-rows: repeat(2, 160px); */
  gap: 4px;
}

#node {
  grid-area: node;
}

#express {
  grid-area: express;
  color: #002233;
}

#python {
  display: grid;
  grid-template-areas:
    "pythonLanguage"
    "flask";
  /* grid-template-rows: repeat(2, 160px); */
  gap: 4px;
}

#pythonLanguage {
  grid-area: pythonLanguage;
}

#flask {
  grid-area: flask;
}

#lowLevel {
  display: grid;
  grid-template-areas:
    "c"
    "cpp";
  /* grid-template-rows: repeat(2, 160px); */
  gap: 4px;
}

#c {
  grid-area: c;
  background-color: #0C0E34;
}

#cpp {
  grid-area: cpp;
}

#hostingEnd {
  grid-area: hostingend;
  display: grid;
  /* grid-template-rows: repeat(3, 160px); */
  grid-template-areas:
    "docker"
    "ngnix"
    "aws";
}

#docker {
  grid-area: docker;
  background-color: #ffffff;
}

#ngnix {
  grid-area: ngnix;
}

#aws {
  grid-area: aws;
  background-color: #141F2E;
}

#dataStorage {
  grid-area: dataStorage;
  display: grid;
  grid-template-areas:
    "yesSql"
    "noSql";
  gap: 8px;
}

#yesSql {
  grid-area: yesSql;
  display: grid;
  grid-template-areas:
    "sql"
    "pgSql";
  gap: 4px;
}

#noSql {
  grid-area: noSql;
  display: grid;
  grid-template-areas:
    "mongoDb";
  gap: 4px;
}

#sql {
  grid-area: sql;
  background-color: #002342;
}

#pgSql {
  grid-area: pgSql;
  background-color: aliceblue;
}

#mongoDb{
  grid-area: mongoDb;
  background-color: aliceblue;
}

#processes {
  grid-area: processes;
  display: grid;
  grid-template-areas:
    "devOps scrum dynamicProgramming DataStructures"
    "softwareDesign algorithms systemDesign DataStructures";
  gap: 4px;
}

#devOps {
  grid-area: devOps;
}

#scrum {
  grid-area: scrum;
}

#dynamicProgramming {
  grid-area: dynamicProgramming;
}

#DataStructures {
  grid-area: DataStructures;
}

#algorithms {
  grid-area: algorithms;
}

#systemDesign {
  grid-area: systemDesign;
}

#devOps {
  grid-area: devOps;
}

#softwareDesign {
  grid-area: softwareDesign;
}

img {
  width: 100%;
  height: 100%;
}

.zoom {
  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2),
    0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);
  transition: transform 0.4s;
}

.zoom:hover {
  transform: scale(1.05);
}


